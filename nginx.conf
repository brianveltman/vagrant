
user  nginx nginx;
worker_processes 8;

# Keeps the logs free of messages about not being able to bind().
#daemon     off;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    # enable ngx_pagespeed
        pagespeed on;
        pagespeed EnableFilters combine_css,combine_javascript;
        pagespeed PreserveUrlRelativity on;
        pagespeed RespectVary on;
        pagespeed XHeaderValue "Powered By lupio.nl";
        pagespeed FileCachePath /var/ngx_pagespeed_cache;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 80;
        server_name localhost;
        rewrite ^ https://$server_name$request_uri permanent;
    }

    server {
        listen       443;
        server_name  localhost *.localhost;
        include /etc/nginx/hhvm.conf;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        root   html;
        index  index.php;

        server_tokens off;

        ssl on;
        ssl_certificate /etc/nginx/ssl/wildcard_lupio_nl.crt;
        ssl_certificate_key /etc/nginx/ssl/wildcard_lupio_nl.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # do not use SSLv3 ref: POODLE

        location / {
                try_files $uri $uri/ /index.php?$args ;
        }
        
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}
                # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.(hh|php)$ {
            root           /html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            include        fastcgi_params;
        }

        location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|p$
                access_log off; log_not_found off; expires 360d;
        }

        location = /robots.txt { access_log off; log_not_found off; }
        location ~ /\. { deny  all; access_log off; log_not_found off; }
        location ~ /\. { access_log off; log_not_found off; deny all; }
        
                # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
        # HTTPS server
    ##
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
        #    }
    #}

}
    
